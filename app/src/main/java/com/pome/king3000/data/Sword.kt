package com.pome.king3000.data

import com.pome.king3000.R
import com.pome.king3000.data.utils.Utils
import kotlinx.serialization.Serializable

@Serializable
data class Sword(
    val name: String,
    val attackValue: Long,
    val attackWeight: Long,
    val defendValue: Long,
    val defendWeight: Long,
    val drawableResId: Int,
)

val SwordStore = listOf(
    Sword(
        name = "Reaper Sword",
        drawableResId = R.drawable.reaper_sword,
        attackValue = Utils.randomSwordAttackValue(),
        attackWeight = Utils.randomSwordAttackWeight(),
        defendValue = Utils.randomSwordDefendValue(),
        defendWeight = Utils.randomSwordDefendWeight(),
    ),
    Sword(
        name = "Diamond Sword",
        drawableResId = R.drawable.diamond_sword,
        attackValue = Utils.randomSwordAttackValue(),
        attackWeight = Utils.randomSwordAttackWeight(),
        defendValue = Utils.randomSwordDefendValue(),
        defendWeight = Utils.randomSwordDefendWeight(),
    ),
    Sword(
        name = "Levin Sword",
        drawableResId = R.drawable.levin_sword,
        attackValue = Utils.randomSwordAttackValue(),
        attackWeight = Utils.randomSwordAttackWeight(),
        defendValue = Utils.randomSwordDefendValue(),
        defendWeight = Utils.randomSwordDefendWeight(),
    ),
    Sword(
        name = "Op Sword",
        drawableResId = R.drawable.op_sword,
        attackValue = Utils.randomSwordAttackValue(),
        attackWeight = Utils.randomSwordAttackWeight(),
        defendValue = Utils.randomSwordDefendValue(),
        defendWeight = Utils.randomSwordDefendWeight(),
    ),
    Sword(name = "Deadly Diamond Sword",
        drawableResId = R.drawable.deadly_diamond_sword,
        attackValue = Utils.randomSwordAttackValue(),
        attackWeight = Utils.randomSwordAttackWeight(),
        defendValue = Utils.randomSwordDefendValue(),
        defendWeight = Utils.randomSwordDefendWeight(),
    ),
    Sword(
        name = "Wooden Sword",
        drawableResId = R.drawable.wooden_sword,
        attackValue = Utils.randomSwordAttackValue(),
        attackWeight = Utils.randomSwordAttackWeight(),
        defendValue = Utils.randomSwordDefendValue(),
        defendWeight = Utils.randomSwordDefendWeight(),
    ),
    Sword(name = "Liveloxz Wood Sword",
        drawableResId = R.drawable.liveloxz_wood_sword,
        attackValue = Utils.randomSwordAttackValue(),
        attackWeight = Utils.randomSwordAttackWeight(),
        defendValue = Utils.randomSwordDefendValue(),
        defendWeight = Utils.randomSwordDefendWeight(),
    ),
    Sword(
        name = "Black Diamond Sword",
        drawableResId = R.drawable.black_diamond_sword,
        attackValue = Utils.randomSwordAttackValue(),
        attackWeight = Utils.randomSwordAttackWeight(),
        defendValue = Utils.randomSwordDefendValue(),
        defendWeight = Utils.randomSwordDefendWeight(),
    ),
    Sword(name = "Kirito Sword",
        drawableResId = R.drawable.kirito_sword,
        attackValue = Utils.randomSwordAttackValue(),
        attackWeight = Utils.randomSwordAttackWeight(),
        defendValue = Utils.randomSwordDefendValue(),
        defendWeight = Utils.randomSwordDefendWeight(),
    ),
    Sword(name = "Captain Shield",
        drawableResId = R.drawable.captain_shield,
        attackValue = Utils.randomSwordAttackValue(),
        attackWeight = Utils.randomSwordAttackWeight(),
        defendValue = Utils.randomSwordDefendValue(),
        defendWeight = Utils.randomSwordDefendWeight(),
    ),
    Sword(name = "Iron Man Helmet",
        drawableResId = R.drawable.master_sword,
        attackValue = Utils.randomSwordAttackValue(),
        attackWeight = Utils.randomSwordAttackWeight(),
        defendValue = Utils.randomSwordDefendValue(),
        defendWeight = Utils.randomSwordDefendWeight(),
    ),
    Sword(name = "Sanguineous Crusader Sword",
        drawableResId = R.drawable.jade_diamond_sword,
        attackValue = Utils.randomSwordAttackValue(),
        attackWeight = Utils.randomSwordAttackWeight(),
        defendValue = Utils.randomSwordDefendValue(),
        defendWeight = Utils.randomSwordDefendWeight(),
    ),
    Sword(name = "Blair Diamond Sword",
        drawableResId = R.drawable.blair_diamond_sword,
        attackValue = Utils.randomSwordAttackValue(),
        attackWeight = Utils.randomSwordAttackWeight(),
        defendValue = Utils.randomSwordDefendValue(),
        defendWeight = Utils.randomSwordDefendWeight(),
    )
)